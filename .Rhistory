doc<-xmlTreeParse(fileUrl,useInternalNodes = TRUE)
doc<-xmlTreeParse(fileUrl)
fileUrl
fileUrl<-"http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc<-xmlTreeParse(fileUrl,useInternalNodes = TRUE)
rootNode<-xlmRoot(doc)
rootNode<-xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
rootNode[[1]]
rootNode[[1]][[1]]
xmlSapply(rootNode, xmlValue)
xmlApply(rootNode, `xmlValue<-`)
xmlApply(rootNode, xmlValue(rootNode))
xpathSapply(rootNode, "//zipcode", xmlValue())
rootNode
xmlName(rootNode)
names(rootNode)
doc<-xmlTreeParse(fileUrl, useInternal=TRUE)
doc
names(rootNode)
rootNode<-xmlRoot(doc)
rootNode
xmlName(rootNode)
names(rootNode[[1]])
length(names(rootNode[[1]]))
length(names(rootNode[[2]]))
names(rootNode[[2]])
rootNode[[1]][[1]]
rootNode<-rootNode[[1]]
names(rootNode)
rootNode[[1]][[1]]
xmlSapply(rootNode, xmlValue)
xmlApply(rootNode, xmlName)
xmlApply(rootNode, xmlValue)
xmlSApply(rootNode, xmlValue)
xpathSApply(rootNode, "//zipcode", xmlValue)
zipcode<-xpathSApply(rootNode, "//zipcode", xmlValue)
length(zipcode)
class(zipcode)
id<-zipcode=="21231"
length(id)
head(id)
sum(id)
install.packages("data.table")
library(data.taable)
library(data.table)
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(fileUrl, destfile="quiz1Q5.csv")
list.files("./")
fread("quiz1Q5.csv")
system.time(fread("quiz1Q5.csv"))
DT<-fread("quiz1Q5.csv")
sapply(split(DT$pwgtp15,DT$Sex), mean)
sapply(split(DT$pwgtp15,DT$SEX),mean)
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
tapply(DT$pwgtp15,DT$SEX,mean)
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
DT[,mean(pwgtp15), by=SEX]
system.time(DT[,mean(pwgtp15), by=SEX])
rowMeans(DT)[DT$SEX==1]
rowMeans(DT$pwgtp15)[DT$SEX==1]
mean(DT$pwgtp15, by=DT$SEX)
system.time(mean(DT$pwgtp15, by=DT$SEX))
DT[,mean(pwgtp15), by=SEx]
DT[,mean(pwgtp15), by=SEX]
system.time(DT[,mean(pwgtp15), by=SEX])
install.packages("MySQL")
install.packages("RMySQL")
ucscDb<-dbConnect(MySQL(), user="genome", host="genome-mysql.cse.ucsc.edu")
search()
library(RMySQL)
library("RMySQL")
ucscDb<-dbConnect(MySQL(), user="genome", host="genome-mysql.cse.ucsc.edu")
result<-dbGetQuery(ucscDb, "show databases;"); dbDisconnect(ucscDb)
result
result(1)
result(name=1)
result(name==1)
class(result)
sum(result=="hg19")
result[result=="hg19"]
?dbConnect
dbCanConnect(MySQL(), user="genome", host="genome-mysql.cse.ucsc.edu")
dbCanConnect(MySQL(), host="genome-mysql.cse.ucsc.edu")
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(rhdf5)
created=h5createFile("example.h5")
created
created=h5createGroup("example.h5", "foo")
created=h5createGroup("example.h5", "baa")
created=h5createGroup("example.h5", "foo/foobaa")
h5ls("example.h5")
A = matrix(1:10, nr=5, nc=2)
h5write(A, "example.h5", "foo/A")
B=array(seq(0.1, 2.0, by=0.1), dim=c(5,2,2))
attr(B, "scale")<-"liter"
h5write(B, "example.h5", "foo/foobaa/B")
h5ls("example.h5")
A=matrix(1:10, 2,5)
A
df=data.frame(1L:5L, seq(0,1,length.out=5), c("ab", "cde", "fghi", "a", "s"), stringsAsFactors = FALSE)
df
h5write(df, "example.h5", "df")
h5ls("example.h5")
readdf=h5read("example.h5", "df")
readdf
readA=h5read("example.h5", "foo/A")
readA
h5write(c(12,13,14), "example.h5", "foo/A", index=list(1:3, 1))
h5read("example.h5", "foo/A")
h5ls("example.h5")
h5read("example.h5", "foo/A", index=list(2:4, 1:2))
con=url("http://www.pstcc.edu/")
htmlCode=readLines(con)
close(con)
htmlCode
url
library(XML)
url<-"http://www.pstcc.edu"
html<-htmlTreeParse(url, useInternalNodes = T)
xpathSApply(html, "//script", xmlValue)
library(httr)
library(bea.R)
bea2List(beaPayload = 1)
?nchar()
oauth_endpoints("github")
myapp <- oauth_app("github", key = "5d34bb173ae9f94797ac",secret = "b529655e086d66332dc65e921db024aee42ad1a0")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
install.packages("httpuv")
install.packages("httpuv")
getwd()
ls.files()
filesls()
list.files("../")
list.files("./")
installã€‚packages("httr")
install.packages("httr")
install.packages("fttpuv")
install.packages("fttr")
library(httr)
oauth_endpoints("github")
myapp<-oauth_app("github",
key="5d34bb173ae9f94797ac",
secret="b529655e086d66332dc65e921db024aee42ad1a0"
)
myapp
github_token<-oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken<-config(token=github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
j1<-content(req)
j1
install.packages("httpuv")
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
j1
j1<-content(req)
j1
ls.files("./")
list.files("./")
myapp<-oauth_app("github",
key="5d34bb173ae9f94797ac",
secret="b529655e086d66332dc65e921db024aee42ad1a0"
)
github_token<-oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken<-config(token=github_token)
q1<-GET("https://api.github.com/users/jtleek/repos", gtoken)
content(q1)
json2=jsonlite::fromJSON(toJSON(content(q1)))
class(q1)
names(q1)
q1(names="times")
q1(names=="times")
q1[names=="times"]
q1[\"times"]
q1["times"]
q1["date"]
names(q1)
content(q1)
json2=jsonlite::fromJSON(toJSON(q1))
install.packages("JSON")
library(jsonlite)
json2=jsonlite::fromJSON(toJSON(q1))
json1<-content(q1)
json2=jsonlite::fromJSON(toJSON(json1))
json2
View(json2)
View(json2)
colnames(json2)
json2["created_at"]
colnames(json2)
json2["name"]
json2[16, "created_at"]
install.packages("sqldf")
fileUrl<-("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
download.file(fileUrl, destifile="acs.csv")
download.file(fileUrl, destfile="acs.csv")
list.files("./")
read.csv("acs.csv")
acs<-read.csv("acs.csv")
sqldf("select pwgtp1 from acs")
sqldf::sqldf("select pwgtp1 from acs")
sqldf::"select pwgtp1 from acs"
sqldf::("select pwgtp1 from acs")
search()
library(sqldf)
sqldf("select pwgtp1 from acs")
sqldf("select pwgtp1 from acs")
colnames(acs=="pwgtp1"
source('C:/Users/risin/Desktop/datascience_jhu/course3/readingfiles.R', echo=TRUE)
colnames(acs)=="pwgtp1"
sum(colnames(acs)=="pwgtp1")
sqldf("select pwgtp1 from acs")
View(acs)
View(acs)
?sqldf()
getwd()
list.files("./")
quit()
install.packages("sqldf")
library(sqldf)
acs<-read.csv("acs.csv")
sqldf("select pwgtp1 from acs")
options(sqldf.driver = "SQLite")
sqldf("select pwgtp1 from acs")
search()
sqldf("select pwgtp1 from acs where AGEP<50")
sqldf("select unique * from acs")
sqldf("select distinct pwgtp1 from acs")
webpg<-url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode<-readLines(webpg)
close(webpage)
close(webpg)
htmlCode
?nchar()
nchar(htmlCode)
q4<-c(10,20,30,100)
nchar(htmlCode)[q4]
fileUrl<-("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
download.file(fileUrl, destfile="q5.txt")
list.files("./")
?readLines
?read.fwf
read.fwf(q5.txt, skip=4, width=c(16,4,4,9,4,9,4,9,4x<-))
x<-read.fwf(q5.txt, skip=4, width=c(16,4,4,9,4,9,4,9,4))
x<-read.fwf("q5.txt", skip=4, width=c(16,4,4,9,4,9,4,9,4))
head(x)
x<-read.fwf("q5.txt", skip=4, width=c(12,7,4,9,4,9,4,9,4))
head(x)
class(x)
q5<-x[4]
head(q5)
sum(q5)
?rm
rm(list=ls())
search()
sample(1:5)
sample(1:5)
set.seed(13435)
X<-data.frame("var1"=sample(1:5), "var2"=sample(6:10), "var3"=sample(11:15))
X
X<-X[sample(1:5), ]
X
X$var2[c(1,3)]=NA
X
sort(X$var2, na.last=TRUE)
sort(X$var2)
order(X$var1)
X[order(Xvar1),]
X[order(X$var1),]
X
?table()
?data()
data("UCBAdmissions")
DF=as.data.frame(UCBAdmissions)
summary(DF)
data()
search()
rep(1:9, len=54)
fakeData=rnorm(1e5)
x<-c(1,3,8,25,100)
seq(along=x)
seq_along(x)
cut()
?cut()
yesno<-sample(c("yes", "no"), size=10, replace=TRUE)
yesno
yesnofac<-factor(yesno, levels=c("yes", "no"))
yesnofac
yesnofac<-factor(yesno)
yesnofac
relevel(yesnofac, ref="yes")
yesnofac
as.numeric(yesnofac)
rownames(mtcars)
head(mtcars,n=2)
?ave()
source('C:/Users/risin/Desktop/datascience_jhu/course2/prime.R')
source('C:/Users/risin/Desktop/datascience_jhu/course2/prime.R')
prime2(100)
prime2(1716)
prime(2142019)
prime2(2142019)
prime()
prime
library(dplyr)
install.packages(dplyr)
install.packages("dplyr")
library(dplyr)
install.packages("dplyr")
library(dplyr)
install.packages("dplyr")
library(dplyr)
unloadNamespace(DBI)
unloadNamespace("DBI")
unloadNamespace("RMySQL
")
unloadNamespace("DBI")
unloadNamespace("RMySQL")
search()
unloadNamespace("DBI")
search()
install.packages("dplyr")
library(dplyr)
loadedNamespaces()
library(dplyr)
install.packages("dplyr")
library(dplyr)
?strsplit
strsplit("a.b.c", "[.]")
strsplit("a.b.c", "\.")
strsplit("a.b.c", "\\.")
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl, destfile = "wk4q1.csv")
read.csv("wk4q1.csv")
q1<-read.csv("wk4q1.csv")
head(q1, n=2)
dim(q1)
splitwgtp=strsplit(names(q1), wgtp)
splitwgtp=strsplit(names(q1), "wgtp")
dim(splitwgtp)
splitwgtp=strsplit(names(q1), "wgtp")
splitwgtp[1]
splitwgtp[180]
splitwgtp[188]
splitwgtp[123]
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileUrl, destfile = "wk4q2.csv")
q2<-read.csv("wk4q2.csv", skip=4, nrows=190)
View(q2)
View(q2)
class(q2$X.4)
gdp<-sub(",", "", q2$X.4)
gdp<-gsub(",", "", q2$X.4)
mean(as.numeric(gdp))
View(q1)
View(readA)
View(q2)
View(q2)
grep("^United", q2$X.3)
fileUrl2<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileUrl2, destfile = "wk4q4.csv")
edu<-read.csv("wk4q4.csv", na.strings = "")
View(edu)
View(edu)
View(q2)
View(q2)
gdp<-gsub(",", "", q2$X.4)
View(edu)
View(edu)
edu1<-edu1[is.na(edu$Income.Group)==FALSE,]
edu1<-edu[is.na(edu$Income.Group)==FALSE,]
gdpedu1<-merge(gdp, edu1, by.x="id", by.y="CountryCode", all=FALSE)
View(edu1)
View(edu1)
View(q2)
View(q2)
gdpedu1<-merge(gdp, edu1, by.x="X", by.y="CountryCode", all=FALSE)
gdpedu1<-merge(q2, edu1, by.x="X", by.y="CountryCode", all=FALSE)
View(gdpedu1)
View(gdpedu1)
is.na(gdpedu1$X.4)
all(is.any(gdpedu1$X.4))
any(is.any(gdpedu1$X.4))
?any()
any(is.na(gdpedu1$X.4))
names(gdpedu1)
gdpedu1[19]
grep("June", gdpedu1[19])
grep()
?grep()
grep("^Fiscal Year Ends: June", gdpedu1[19])
head(gdpedu1[19],n=2)
grep("^Fiscal year end:", gdpedu1[19])
grep("^Fiscal year", gdpedu1[19])
grep("^Fiscal", gdpedu1[19])
grep("^Fiscal", gdpedu1$\)
grep("^Fiscal", gdpedu1$Special.Notes)
grep("June", gdpedu1$Special.Notes)
q5<-grep("June, gdpedu1$Special.Notes")
q5<-grep("June", gdpedu1$Special.Notes)
gdpedu1[q5,gdpedu1$Special.Notes]
gdpedu1[,q5]
q5
gdpedu1[q5,]
gdpedu1$Special.Notes[q5]
q5<-grep("F[f]iscal (.*) June", gdpedu1$Special.Notes)
q5<-grep("[F[f]iscal]+ (.*) [June]+", gdpedu1$Special.Notes)
q5<-grep("F[f]iscal(.*)June", gdpedu1$Special.Notes)
q5<-grep("F[f]iscal (.*)? June", gdpedu1$Special.Notes)
?regex()
regex("June", gdpedu1$Special.Notes)
gdpedu1[q5,gdpedu1]
q5<-grep("June", gdpedu1)
q5<-grep("June", gdpedu1)
q5
q5<-grep("June", gdpedu1$X.1)
q5<-grep("June", gdpedu1$Special.Notes)
set<-gdpedu1$Special.Notes[q5]
dim(set)
set
q4<-grep1("June", gdpedu1$Special.Notes)
q4<-grepl("June", gdpedu1$Special.Notes)
gdpedu1$Special.Notes[q4]
table(q4)
q5<-grep("June", gdpedu1$Special.Notes, value=TRUE)
q5
class(q5)
dim(q5)
q5[1]
q5[2]
q5[3]
q5[1:2]
q5
grep("Fiscal year end: June", q5)
sum(grep("Fiscal year end: June", q5))
table(grepl("Fiscal year end: June", q5))
q4<-grep("June, gdpedu1$Special.Notes", value=TRUE)
q4<-grep("June", gdpedu1$Special.Notes, value=TRUE)
table(grepl("Fiscal year end: June", q4))
library(quantmod)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
View(amzn)
View(amzn)
dim(amzn)
names(amzn)
?index()
sampleTimes[1]
length(sampleTimes)
head(rownames(amzn),n=3)
rownames(amzn)
x.date <- as.Date(paste(2003, 2, c(1, 3, 7, 9, 14), sep = "-"))
x <- zoo(rnorm(5), x.date)
## query index/time of a zoo object
index(x)
time(x)
?zoo()
yearmon(sampleTimes)
class(sampleTimes)
years(sampleTimes)
months(sampleTimes)
?months
head(sampleTimes, n=4)
grep("^2012", sampleTimes)
table(grepl("^2012", sampleTimes))
head(weekdays(sampleTimes), n=4)
table(grep("2012", sampleTimes))
table(grepl("2012", sampleTimes))
data.2012=sampleTimes[grep("2012", sampleTimes)]
table(weekdays(data.2012))
rm(list=ls())
unzip(zipfile="activity.zip")
activity<-read.csv("activity.csv", header=TRUE)
activity$date<-as.Date(as.character(activity$date), "%Y-%m-%d")
activity$interval<-as.factor(activity$interval)
str(activity$interval)
cd ".//"
setwd("./..")
setwd("./course5")
setwd("./RepData_PeerAssessment1")
unzip(zipfile="activity.zip")
activity<-read.csv("activity.csv", header=TRUE)
activity$date<-as.Date(as.character(activity$date), "%Y-%m-%d")
activity$interval<-as.factor(activity$interval)
str(activity$interval)
replace.missing.mean<-function(x){
x[is.na(x)]<-mean(x, na.rm=TRUE)
x
}
temp<-sapply(split(activity$steps, activity$interval), replace.missing.mean)
steps.na.impute<-sapply(t(temp), cbind)
activity.na.impute<-cbind(steps.na.impute, activity[2:3])
weekend<-weekdays(activity.na.impute$date) %in% c("Saturday", "Sunday")
weekend<-as.factor(weekend)
levels(weekend)<-c("weekday", "weekend")
activity.na.impute<-data.frame(activity.na.impute, weekend)
mean.step.na.impute<-aggregate(steps.na.impute ~ interval + weekend, data=activity.na.impute, mean)
head(mean.step.na.impute)
library(ggplot2)
ggplot(mean.step.na.impute, aes(x=interval, y=steps.na.impute, color=weekennd))+geom_line()
ggplot(mean.step.na.impute, aes(x=interval, y=steps.na.impute, color=weekend))+geom_line()
ggplot(mean.step.na.impute, aes(x=rep(seq(1:288), 2), y=steps.na.impute, color=weekend))+geom_line()+labs(title="Average Steps Across Days", x="Interval", y="Steps")+facet_grid(.~weekend)
ggplot(mean.step.na.impute, aes(x=rep(seq(1:288), 2), y=steps.na.impute, color=weekend))+geom_line()+labs(title="Average Steps Across Days", x="Interval", y="Steps")+facet_grid(weekend~.)
ggplot(mean.step.na.impute, aes(x=rep(seq(1:288), 2), y=steps.na.impute, color=weekend))+geom_line()+labs(title="Average Steps Across Days", x="Interval", y="Steps")+facet_grid(weekend~., ncol=1, nrow=2)
ggplot(mean.step.na.impute, aes(x=rep(seq(1:288), 2), y=steps.na.impute, color=weekend))+geom_line()+labs(title="Average Steps Across Days", x="Interval", y="Steps")+facet_wrap(weekend~., ncol=1, nrow=2)
ggplot(mean.step.na.impute, aes(x=rep(seq(1:288), 2), y=steps.na.impute, color=weekend))+geom_line()+labs(title="Average Steps Across Days", x="Interval", y="Steps")+facet_wrap(weekend~.)
?ggplot
ggplot(mean.step.na.impute, aes(x=rep(seq(1:288), 2), y=steps.na.impute, color=weekend, xmax=288))+geom_line()+labs(title="Average Steps Across Days", x="Interval", y="Steps")+facet_wrap(weekend~.)
ggplot(mean.step.na.impute, aes(x=rep(seq(1:288), 2), y=steps.na.impute, color=weekend, xmin=0, xmax=288))+geom_line()+labs(title="Average Steps Across Days", x="Interval", y="Steps")+facet_wrap(weekend~.)
